import{SvelteElement,append,attribute_to_object,detach,element,flush,init,insert,noop,not_equal,set_data,subscribe,text}from"/layouts/dashboard/svelte/internal/index.mjs";function create_fragment(t){let e,n,o,s=t[1]?.text+"";return{c(){e=element("span"),n=text("Dashboard - search: "),o=text(s),this.c=noop},m(t,s){insert(t,e,s),append(e,n),append(e,o)},p(t,[e]){2&e&&s!==(s=t[1]?.text+"")&&set_data(o,s)},i:noop,o:noop,d(t){t&&detach(e)}}}function onSseConnect(){console.debug("<hdl-dashboard />.sseClient connected")}function instance(t,e,n){let o,s=noop;t.$$.on_destroy.push((()=>s()));let a,{layoutContext:r}=e;return t.$$set=t=>{"layoutContext"in t&&n(2,r=t.layoutContext)},t.$$.update=()=>{4&t.$$.dirty&&r&&(r.sseClient.offConnect(onSseConnect),r.sseClient.onConnect(onSseConnect),n(0,({search:a}=r.state),a),s(),s=subscribe(a,(t=>n(1,o=t))))},[a,o,r]}class Body extends SvelteElement{constructor(t){super(),init(this,{target:this.shadowRoot,props:attribute_to_object(this.attributes),customElement:!0},instance,create_fragment,not_equal,{layoutContext:2},null),t&&(t.target&&insert(t.target,this,t.anchor),t.props&&(this.$set(t.props),flush()))}static get observedAttributes(){return["layoutContext"]}get layoutContext(){return this.$$.ctx[2]}set layoutContext(t){this.$$set({layoutContext:t}),flush()}}customElements.define("hdl-dashboard",Body);export default Body;